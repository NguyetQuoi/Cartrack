apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
//    signingConfigs {
//        debug {
//            storeFile file('ct.jks')
//            storePassword 'cartrack'
//            keyAlias = 'android'
//            keyPassword 'cartrack'
//        }
//    }

    compileSdkVersion build_version.compile_sdk_version

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
            all*.exclude group: 'com.google.guava', module: 'listenablefuture'

            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'androidx.lifecycle'
                        && !details.requested.name.contains('extensions')
                ) {
                    details.useVersion "2.4.0-rc01"
                }
            }
        }

        applicationId "com.example.cartrack"
        minSdkVersion build_version.min_sdk_version
        targetSdkVersion build_version.target_sdk_version
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
            multiDexEnabled true
            multiDexKeepProguard = file('multidex-config.pro')
        }
        debug {
            minifyEnabled false
            testCoverageEnabled false
            multiDexEnabled true
            signingConfig signingConfigs.debug
            multiDexKeepProguard = file('multidex-config.pro')
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "Cartract-${output.baseName}-${variant.versionName}.apk"
        }
    }


    dataBinding {
        enabled true
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    apply from: 'flavors.gradle'
}

dependencies {
    implementation("android.arch.work:work-runtime:1.0.1") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.4.0-beta01'

    implementation libs.legacy_support
    implementation libs.constraint
    implementation libs.design
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation "androidx.startup:startup-runtime:1.1.0"

    // Arrow
    implementation libs.arrow

    // Gson
    implementation "com.google.code.gson:gson:2.8.8"

    // OkHttp
    implementation libs.okhttp
    implementation libs.okhttp_logging

    // Koin
    implementation "io.insert-koin:koin-core:3.1.2"
    implementation "io.insert-koin:koin-android:3.1.2"

    // Kotlin
    implementation libs.kotlin_stdlib
    implementation libs.kotlin_ext
    implementation libs.steho

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Data binding
    implementation libs.databinding_compiler

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit_gson
    implementation libs.retrofit_rx_java

    // Androidx - Lifecycle
    implementation libs.lifecycle_ext
    implementation libs.arch_comp_viewmodel_compose
    implementation libs.arch_comp_livedata
    implementation libs.arch_comp_viewmodel

    // Location - map
    implementation libs.google_service_location
    implementation libs.google_service_map
    implementation libs.google_service_map_util

    // Dimension
    implementation libs.sdp
    implementation libs.ssp

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:2.7.0"
    implementation "androidx.work:work-rxjava2:2.7.0"

    // Log
    implementation libs.timber

    // Multidex
    implementation("androidx.multidex:multidex:2.0.1")

    // Room components
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    // Database encrypt
    implementation 'net.zetetic:android-database-sqlcipher:4.4.0@aar'

    // Unit test
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:3.5.9"
    testImplementation "android.arch.core:core-testing:1.1.1"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    testImplementation "org.powermock:powermock-module-junit4:2.0.4"
    testImplementation "org.powermock:powermock-module-junit4-rule:2.0.4"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.4"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
}

allprojects {
    configurations.all {
        resolutionStrategy {
            force("org.objenesis:objenesis:2.6")
        }
    }
}

repositories {
    mavenCentral()
}
